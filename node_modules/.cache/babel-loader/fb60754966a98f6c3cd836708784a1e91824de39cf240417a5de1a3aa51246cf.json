{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1234\\\\web-7\\\\src\\\\components\\\\QueryService.js\",\n  _s = $RefreshSig$();\n// QueryService.js\nimport React, { useState } from \"react\";\nimport { getUser } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QueryService = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const fetchUser = async () => {\n    try {\n      const response = await getUser(name);\n      if (!response.ok) {\n        throw new Error(\"Ошибка при получении данных\");\n      }\n      // Читаем ответ как текст\n      const data = await response.text();\n      setMessage(data); // Устанавливаем полученное текстовое сообщение\n    } catch (error) {\n      console.error(\"Ошибка:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u0435\\u0440\\u0432\\u0438\\u0441 Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchUser,\n      children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u0440\\u0438\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(QueryService, \"BxisgDKdTWl2v/z8EHSRDlEIUVQ=\");\n_c = QueryService;\nexport default QueryService; // Экспорт по умолчанию\nvar _c;\n$RefreshReg$(_c, \"QueryService\");","map":{"version":3,"names":["React","useState","getUser","jsxDEV","_jsxDEV","QueryService","_s","name","setName","message","setMessage","fetchUser","response","ok","Error","data","text","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/1234/web-7/src/components/QueryService.js"],"sourcesContent":["// QueryService.js\r\nimport React, { useState } from \"react\";\r\nimport { getUser } from \"../services/api\";\r\n\r\nconst QueryService = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const fetchUser = async () => {\r\n        try {\r\n            const response = await getUser(name);\r\n            if (!response.ok) {\r\n                throw new Error(\"Ошибка при получении данных\");\r\n            }\r\n            // Читаем ответ как текст\r\n            const data = await response.text();\r\n            setMessage(data); // Устанавливаем полученное текстовое сообщение\r\n        } catch (error) {\r\n            console.error(\"Ошибка:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Сервис Query</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={name}\r\n                placeholder=\"Введите имя\"\r\n                onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <button onClick={fetchUser}>Получить приветствие</button>\r\n            <p>{message}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QueryService;  // Экспорт по умолчанию\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,OAAO,CAACK,IAAI,CAAC;MACpC,IAAI,CAACK,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA;MACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCN,UAAU,CAACK,IAAI,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IACnC;EACJ,CAAC;EAED,oBACIb,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnB,OAAA;MACIoB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAElB,IAAK;MACZmB,WAAW,EAAC,+DAAa;MACzBC,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACJ,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFnB,OAAA;MAAQ0B,OAAO,EAAEnB,SAAU;MAAAQ,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDnB,OAAA;MAAAe,QAAA,EAAIV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEd,CAAC;AAACjB,EAAA,CA/BID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAiClB,eAAeA,YAAY,CAAC,CAAE;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}