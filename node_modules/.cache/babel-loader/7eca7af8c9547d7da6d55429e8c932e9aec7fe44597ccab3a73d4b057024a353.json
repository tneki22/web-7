{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1234\\\\web-7\\\\src\\\\components\\\\CountService.js\",\n  _s = $RefreshSig$();\n// CountService.js\nimport React, { useState, useEffect } from \"react\";\nimport { getCount, postCount } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountService = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [increment, setIncrement] = useState(\"\");\n  useEffect(() => {\n    fetchCount();\n  }, []);\n  const fetchCount = async () => {\n    const response = await getCount();\n    setCount(response);\n  };\n  const updateCount = async () => {\n    try {\n      await postCount(increment);\n      fetchCount(); // Обновляем значение счётчика после изменения\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u0435\\u0440\\u0432\\u0438\\u0441 Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u0441\\u0447\\u0451\\u0442\\u0447\\u0438\\u043A: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: increment,\n      onChange: e => setIncrement(e.target.value),\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateCount,\n      children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0441\\u0447\\u0451\\u0442\\u0447\\u0438\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CountService, \"SuCEv5l/xnCjNEUlY2zK1zGq1Dw=\");\n_c = CountService;\nexport default CountService; // Экспорт по умолчанию\nvar _c;\n$RefreshReg$(_c, \"CountService\");","map":{"version":3,"names":["React","useState","useEffect","getCount","postCount","jsxDEV","_jsxDEV","CountService","_s","count","setCount","increment","setIncrement","fetchCount","response","updateCount","error","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/1234/web-7/src/components/CountService.js"],"sourcesContent":["// CountService.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getCount, postCount } from \"../services/api\";\r\n\r\nconst CountService = () => {\r\n    const [count, setCount] = useState(0);\r\n    const [increment, setIncrement] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchCount();\r\n    }, []);\r\n\r\n    const fetchCount = async () => {\r\n        const response = await getCount();\r\n        setCount(response);\r\n    };\r\n\r\n    const updateCount = async () => {\r\n        try {\r\n            await postCount(increment);\r\n            fetchCount(); // Обновляем значение счётчика после изменения\r\n        } catch (error) {\r\n            alert(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Сервис Count</h2>\r\n            <p>Текущий счётчик: {count}</p>\r\n            <input\r\n                type=\"number\"\r\n                value={increment}\r\n                onChange={(e) => setIncrement(e.target.value)}\r\n                placeholder=\"Введите число\"\r\n            />\r\n            <button onClick={updateCount}>Обновить счётчик</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountService;  // Экспорт по умолчанию\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZW,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMX,QAAQ,CAAC,CAAC;IACjCO,QAAQ,CAACI,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMX,SAAS,CAACO,SAAS,CAAC;MAC1BE,UAAU,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IACxB;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjB,OAAA;MAAAa,QAAA,GAAG,yFAAiB,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BjB,OAAA;MACIkB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEd,SAAU;MACjBe,QAAQ,EAAGC,CAAC,IAAKf,YAAY,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,WAAW,EAAC;IAAe;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFjB,OAAA;MAAQwB,OAAO,EAAEf,WAAY;MAAAI,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAACf,EAAA,CAnCID,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAqClB,eAAeA,YAAY,CAAC,CAAE;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}